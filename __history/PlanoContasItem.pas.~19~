unit PlanoContasItem;

interface

type
  TTipoPlanoContasItem = (ttpciCredito, ttpciDebito);
  TSubTipoPlanoContasItem = ();

  TPlanoContasItem = class
  private
    fTipo    : TTipoPlanoContasItem;
    fSubTipo : TSubTipoPlanoContasItem;
    fQuantidade : Integer;

  public
    property Tipo : TTipoPlanoContasItem read fTipo write fTipo;
    property Quantidade : Integer read fQuantidade write fQuantidade;

    constructor Create(const ceTipoPlanoContasItem : TTipoPlanoContasItem; const ciQuantidade : Integer); reintroduce;
  end;

implementation

{ TPlanoContasItem }

constructor TPlanoContasItem.Create(const ceTipoPlanoContasItem : TTipoPlanoContasItem; const ciQuantidade : Integer);
begin
  fTipo := ceTipoPlanoContasItem;
  fQuantidade := ciQuantidade;
end;

end.
